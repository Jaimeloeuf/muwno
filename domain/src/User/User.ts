import type { FirebaseAuthUID } from "../utils/FirebaseAuthUID.js";
import type { ISODateTimeString } from "../utils/Timestamp.js";
import type { Role } from "../Role/index.js";
import type { OrgID } from "../Org/index.js";

/**
 * Type of a User Entity.
 */
export interface User {
  /**
   * UserID stored in the DB, this will also be the user's firebase
   * auth JWT's UID value, to synchronize DB and firebase auth.
   */
  id: FirebaseAuthUID;

  /**
   * Created at datetime in ISO string format, generated by DB on insert.
   */
  createdAt: ISODateTimeString;

  /**
   * A user's given role.
   */
  role?: Role;

  /**
   * The user's organisation's ID
   *
   * Optional because a user do not have an org when first created, they only
   * have an orgID once they create a new org or join an org.
   */
  orgID?: OrgID;

  /**
   * User's name
   */
  name: string;

  /**
   * User's email account used to login to the portal
   */
  email: string;

  /**
   * User's phone number
   */
  phone?: string;

  /**
   * Flag to indicate if this User account is deactivated.
   */
  deactivated: boolean;
}

/**
 * Type alias for `User['id']` where all userIDs will follow the same type.
 */
export type UserID = User["id"];
