import type { FirebaseAuthUID } from "../utils/FirebaseAuthUID.js";
import type { ISODateTimeString } from "../utils/Timestamp.js";
import type { Role } from "../Role/index.js";
import type { OrgID } from "../Org/index.js";

/**
 * Type to define shared/common properties of all User types
 */
export interface User {
  /**
   * UserID stored in the DB, this will also be the user's firebase
   * auth JWT's UID value, to synchronize DB and firebase auth.
   */
  id: FirebaseAuthUID;

  /**
   * Created at datetime in ISO string format, generated by DB on insert.
   */
  createdAt: ISODateTimeString;

  /**
   * A user's given role.
   */
  role: Role;

  /**
   * The user's organisation's ID
   */
  orgID: OrgID;

  /**
   * User email account that is tied to their PMF account.
   * This is the email they use to login with Google Login.
   */
  email: string;

  /**
   * User's name
   */
  name: string;

  /**
   * User's phone number
   */
  phone?: string;

  /**
   * Flag to indicate if this User account is deactivated.
   */
  deactivated: boolean;
}

/**
 * Type alias for `User['id']` where all userIDs will follow the same type.
 */
export type UserID = User["id"];
