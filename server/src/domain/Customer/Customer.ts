import type { ISODateTimeString } from '../utils/Timestamp.js';

/**
 * Type to represent a single Customer.
 */
export interface Customer {
  /**
   * Unique ID for this Customer in our system.
   */
  id: string;

  /**
   * Customer's ID in the user's own system. A unique Customer ID string amongst
   * all of the Org's customers.
   *
   * This **should be** provided for most use cases, but if not provided on
   * import, the autogenerated `id` will be used as the cid.
   */
  cid: string;

  /**
   * ISODateTimeString of when the Customer is imported into our system.
   */
  importedAt: ISODateTimeString;

  /**
   * ISODateTimeString of when the Customer is created in our user's system.
   * Defaults to time of import if not specified on creation.
   */
  createdAt: ISODateTimeString;

  /**
   * Optional name of the Customer. If available, will be used for things like
   * personalizing the surveys sent to them.
   */
  name: string | null;

  /**
   * Optional email of the Customer. Required to send email surveys.
   */
  email: string | null;

  /**
   * Optional phone number of the Customer. Required to send SMS surveys.
   */
  phone: string | null;

  /**
   * @todo
   * Tags
   */
  // tags: Array<string>;

  // @todo Meta data like how many times has this customer been surveyed?
  // @todo If they respond to a survey we should count it...
}

/**
 * Type alias for `Customer['id']`.
 */
export type CustomerID = Customer['id'];

/**
 * An identifier of the `Customer` containing both the system's ID and the
 * user's system's `cid`.
 */
export type CustomerIdentifier = { id: CustomerID; cid: Customer['cid'] };
